{
  "version": 3,
  "sources": ["../../../src/providers/custom/index.ts"],
  "sourcesContent": ["import jwt, {\n  Jwt,\n  JwtPayload,\n} from 'jsonwebtoken';\n\nimport { PUBKeyPromisePayload, SSOProvider } from '../../interfaces';\n\nexport default <SSOProvider>((\n  {\n    publicKeyPromise,\n    authKey: token,\n    retrieveProperties = ['email',],\n  },\n) => {\n  return new Promise((resolve, reject) => {\n    try {\n      const {\n        header: {\n          kid,\n        },\n      } = jwt.decode(token, { complete: true, }) as Jwt;\n\n      (publicKeyPromise as Promise<PUBKeyPromisePayload>).then((jpems) => {\n          const authPayload = jwt.verify(\n            token,\n            jpems[kid as string],\n            { algorithms: ['RS256',],\n          }) as JwtPayload;\n\n          if (!retrieveProperties.reduce((a, b) => a && Object.keys(authPayload).includes(b), true)) {\n            throw new Error('properties missing in auth payload');\n          }\n\n          const payload: { [key: string]: { [key: string]: unknown } } = retrieveProperties.reduce(\n            (a, b) => {\n              a[b] = authPayload[b];\n              return a;\n            },\n            {} as { [key: string]: { [key: string]: unknown } },\n          );\n\n          resolve(payload);\n        })\n        .catch((e) => {\n          reject(e.message);\n        });\n    } catch (e: any) {\n      reject(e.message);\n    }\n  }).then((payload) => ({ payload, })).catch(((error) => ({ error, })));\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,0BAGO;AAIP,IAAO,iBAAsB,CAC3B;AAAA,EACE;AAAA,EACA,SAAS;AAAA,EACT,qBAAqB,CAAC;AAAA,MAErB;AACH,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,QAAI;AACF,YAAM;AAAA,QACJ,QAAQ;AAAA,UACN;AAAA;AAAA,UAEA,4BAAI,OAAO,OAAO,EAAE,UAAU;AAElC,MAAC,iBAAmD,KAAK,CAAC,UAAU;AAChE,cAAM,cAAc,4BAAI,OACtB,OACA,MAAM,MACN;AAAA,UAAE,YAAY,CAAC;AAAA;AAGjB,YAAI,CAAC,mBAAmB,OAAO,CAAC,GAAG,MAAM,KAAK,OAAO,KAAK,aAAa,SAAS,IAAI,OAAO;AACzF,gBAAM,IAAI,MAAM;AAAA;AAGlB,cAAM,UAAyD,mBAAmB,OAChF,CAAC,GAAG,MAAM;AACR,YAAE,KAAK,YAAY;AACnB,iBAAO;AAAA,WAET;AAGF,gBAAQ;AAAA,SAET,MAAM,CAAC,MAAM;AACZ,eAAO,EAAE;AAAA;AAAA,aAEN,GAAP;AACA,aAAO,EAAE;AAAA;AAAA,KAEV,KAAK,CAAC,YAAa,GAAE,YAAa,MAAO,CAAC,UAAW,GAAE;AAAA;",
  "names": []
}
