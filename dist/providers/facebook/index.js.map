{
  "version": 3,
  "sources": ["../../../src/providers/facebook/index.ts"],
  "sourcesContent": ["import axios from 'axios';\n\nimport { SSOProvider, } from '../../interfaces';\nimport SSOUtils from '../../utils';\n\nexport default <SSOProvider>((\n  {\n    appId,\n    appSecret,\n    authKey: token,\n    retrieveProperties = ['email'],\n  },\n) => {\n  return new Promise((resolve, reject) => {\n    try {\n      if (!(appId && appSecret)) {\n        throw new Error('missing dev credentials');\n      }\n\n      axios.get(\n        `https://graph.facebook.com/oauth/access_token?client_id=${appId}&client_secret=${appSecret}&grant_type=client_credentials`\n      ).then(SSOUtils.normalizeServerResponse)\n      .then(({access_token: apiToken}) => {\n        if (!apiToken) {\n          throw new Error('unable to fetch access_token');\n        }\n\n        axios.get(`https://graph.facebook.com/debug_token?input_token=${token}&access_token=${apiToken}`)\n          .then(SSOUtils.normalizeServerResponse)\n          .then(({data}) => {\n            const {\n              is_valid: isValid,\n            } = data;\n\n            if (!isValid) {\n              throw new Error('token invalid');\n            }\n\n            const {\n              user_id: userId,\n            } = data;\n\n            axios.get(`https://graph.facebook.com/${userId}?fields=id,email&access_token=${token}`)\n              .then(SSOUtils.normalizeServerResponse)\n              .then((authPayload) => {\n                if (!retrieveProperties.reduce((a, b) => a && Object.keys(authPayload).includes(b), true)) {\n                  throw new Error('properties missing in auth payload');\n                }\n\n                const payload: { [key: string]: { [key: string]: unknown } } = retrieveProperties.reduce(\n                  (a, b) => {\n                    a[b] = authPayload[b];\n                    return a;\n                  },\n                  {} as { [key: string]: { [key: string]: unknown } },\n                );\n\n                resolve(payload);\n              }).catch((e) => {\n                reject(e.message);\n              });\n          }).catch((e) => {\n            reject(e.message);\n          });\n      }).catch((e) => {\n        reject(e.message);\n      });\n    } catch(e: any) {\n      reject(e.message);\n    }\n  }).then((payload) => ({ payload, })).catch(((error) => ({ error, })));\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,mBAAkB;AAGlB,mBAAqB;AAErB,IAAO,mBAAsB,CAC3B;AAAA,EACE;AAAA,EACA;AAAA,EACA,SAAS;AAAA,EACT,qBAAqB,CAAC;AAAA,MAErB;AACH,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,QAAI;AACF,UAAI,CAAE,UAAS,YAAY;AACzB,cAAM,IAAI,MAAM;AAAA;AAGlB,2BAAM,IACJ,2DAA2D,uBAAuB,2CAClF,KAAK,qBAAS,yBACf,KAAK,CAAC,EAAC,cAAc,eAAc;AAClC,YAAI,CAAC,UAAU;AACb,gBAAM,IAAI,MAAM;AAAA;AAGlB,6BAAM,IAAI,sDAAsD,sBAAsB,YACnF,KAAK,qBAAS,yBACd,KAAK,CAAC,EAAC,WAAU;AAChB,gBAAM;AAAA,YACJ,UAAU;AAAA,cACR;AAEJ,cAAI,CAAC,SAAS;AACZ,kBAAM,IAAI,MAAM;AAAA;AAGlB,gBAAM;AAAA,YACJ,SAAS;AAAA,cACP;AAEJ,+BAAM,IAAI,8BAA8B,uCAAuC,SAC5E,KAAK,qBAAS,yBACd,KAAK,CAAC,gBAAgB;AACrB,gBAAI,CAAC,mBAAmB,OAAO,CAAC,GAAG,MAAM,KAAK,OAAO,KAAK,aAAa,SAAS,IAAI,OAAO;AACzF,oBAAM,IAAI,MAAM;AAAA;AAGlB,kBAAM,UAAyD,mBAAmB,OAChF,CAAC,GAAG,MAAM;AACR,gBAAE,KAAK,YAAY;AACnB,qBAAO;AAAA,eAET;AAGF,oBAAQ;AAAA,aACP,MAAM,CAAC,MAAM;AACd,mBAAO,EAAE;AAAA;AAAA,WAEZ,MAAM,CAAC,MAAM;AACd,iBAAO,EAAE;AAAA;AAAA,SAEZ,MAAM,CAAC,MAAM;AACd,eAAO,EAAE;AAAA;AAAA,aAEL,GAAN;AACA,aAAO,EAAE;AAAA;AAAA,KAEV,KAAK,CAAC,YAAa,GAAE,YAAa,MAAO,CAAC,UAAW,GAAE;AAAA;",
  "names": []
}
